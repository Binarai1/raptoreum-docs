"use strict";(self.webpackChunkraptoreum_docs=self.webpackChunkraptoreum_docs||[]).push([[4463],{9364:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>m,toc:()=>i});var n=a(7462),r=(a(7294),a(3905)),l=a(2004);const o={sidebar_position:8},s="smartnode",m={unversionedId:"wallet/cli-wallet/commands/raptoreum/smartnode",id:"wallet/cli-wallet/commands/raptoreum/smartnode",title:"smartnode",description:"",source:"@site/docs/wallet/cli-wallet/commands/raptoreum/smartnode.mdx",sourceDirName:"wallet/cli-wallet/commands/raptoreum",slug:"/wallet/cli-wallet/commands/raptoreum/smartnode",permalink:"/raptoreum-docs/docs/wallet/cli-wallet/commands/raptoreum/smartnode",draft:!1,editUrl:"https://github.com/Raptor3um/docs/tree/develop/docs/wallet/cli-wallet/commands/raptoreum/smartnode.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"sidebarWallet",previous:{title:"privatesend",permalink:"/raptoreum-docs/docs/wallet/cli-wallet/commands/raptoreum/privatesend"},next:{title:"smartnodelist",permalink:"/raptoreum-docs/docs/wallet/cli-wallet/commands/raptoreum/smartnodelist"}},d={},i=[{value:"Arguments",id:"arguments",level:2},{value:"Output",id:"output",level:2},{value:"Examples",id:"examples",level:2}],p={toc:i};function u(t){let{components:e,...o}=t;return(0,r.kt)("wrapper",(0,n.Z)({},p,o,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"smartnode"},"smartnode"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},'smartnode "command" ...')),(0,r.kt)("p",null,"Set of commands to execute smartnode related actions"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Available commands:\n  count        - Get information about number of smartnodes (DEPRECATED options: 'total', 'ps', 'enabled', 'qualify', 'all')\n  current      - Print info on current smartnode winner to be paid the next block (calculated locally)\n  outputs      - Print smartnode compatible outputs\n  status       - Print smartnode status information\n  list         - Print list of all known smartnodes (see smartnodelist for more info)\n  winner       - Print info on next smartnode winner to vote for\n  winners      - Print list of smartnode winners\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"raptoreum-cli smartnode count")),(0,r.kt)(l.Z,{playing:!0,controls:!0,url:[{src:`${a(7725).Z}`,type:"video/webm"}],mdxType:"ReactPlayer"}),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"command"'),(0,r.kt)("td",{parentName:"tr",align:null},"(string)"),(0,r.kt)("td",{parentName:"tr",align:null},"The command to execute")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'Arguments:\n1. "command"        (string or set of strings, required) The command to execute\n')),(0,r.kt)("h2",{id:"output"},"Output"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Result"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"..."),(0,r.kt)("td",{parentName:"tr",align:null},"..."),(0,r.kt)("td",{parentName:"tr",align:null},"...")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Result:\n{\n  ...\n}\n")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "smartnode", "params": ["count"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:9998/\n')))}u.isMDXComponent=!0},7725:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/medias/smartnode-1d38c42455e0e38a887f7b80312f08a5.webm"}}]);