"use strict";(self.webpackChunkraptoreum_docs=self.webpackChunkraptoreum_docs||[]).push([[1602],{9184:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var l=a(7462),r=(a(7294),a(3905)),n=a(2004);const s={sidebar_position:20},o="importaddress",i={unversionedId:"wallet/cli-wallet/commands/wallet/importaddress",id:"wallet/cli-wallet/commands/wallet/importaddress",title:"importaddress",description:"",source:"@site/docs/wallet/cli-wallet/commands/wallet/importaddress.mdx",sourceDirName:"wallet/cli-wallet/commands/wallet",slug:"/wallet/cli-wallet/commands/wallet/importaddress",permalink:"/C:/Program Files/Git/raptoreum-docs/docs/wallet/cli-wallet/commands/wallet/importaddress",draft:!1,editUrl:"https://github.com/Raptor3um/docs/tree/develop/docs/wallet/cli-wallet/commands/wallet/importaddress.mdx",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"sidebarWallet",previous:{title:"getwalletinfo",permalink:"/C:/Program Files/Git/raptoreum-docs/docs/wallet/cli-wallet/commands/wallet/getwalletinfo"},next:{title:"importelectrumwallet",permalink:"/C:/Program Files/Git/raptoreum-docs/docs/wallet/cli-wallet/commands/wallet/importelectrumwallet"}},d={},p=[{value:"Arguments",id:"arguments",level:2},{value:"Output",id:"output",level:2},{value:"Examples",id:"examples",level:2}],m={toc:p};function u(t){let{components:e,...s}=t;return(0,r.kt)("wrapper",(0,l.Z)({},m,s,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"importaddress"},"importaddress"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},'importaddress "address" ( "label" rescan p2sh )')),(0,r.kt)("p",null,"Adds a script (in hex) or address that can be watched as if it were in your wallet but cannot be used to spend. Requires a new wallet backup."),(0,r.kt)("p",null,"Note: This call can take minutes to complete if rescan is true.\nIf you have the full public key, you should call importpubkey instead of this."),(0,r.kt)("p",null,"Note: If you import a non-standard raw script in hex form, outputs sending to it will be treated\nas change, and not show up in many RPCs."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# Import a script with rescan\nraptoreum-cli importaddress "myscript"\n\n# Import using a label without rescan\nraptoreum-cli importaddress "myscript" "testing" false\n')),(0,r.kt)(n.Z,{playing:!0,controls:!0,url:[{src:`${a(7961).Z}`,type:"video/webm"}],mdxType:"ReactPlayer"}),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"script"'),(0,r.kt)("td",{parentName:"tr",align:null},"(string)"),(0,r.kt)("td",{parentName:"tr",align:null},"The hex-encoded script (or address)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"label"'),(0,r.kt)("td",{parentName:"tr",align:null},"(bool)"),(0,r.kt)("td",{parentName:"tr",align:null},"An optional label")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rescan"),(0,r.kt)("td",{parentName:"tr",align:null},"(bool)"),(0,r.kt)("td",{parentName:"tr",align:null},"Rescan the wallet for transactions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"p2sh"),(0,r.kt)("td",{parentName:"tr",align:null},"(bool)"),(0,r.kt)("td",{parentName:"tr",align:null},"Add the P2SH version of the script as well")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'Arguments:\n1. "script"           (string, required) The hex-encoded script (or address)\n2. "label"            (string, optional, default="") An optional label\n3. rescan               (boolean, optional, default=true) Rescan the wallet for transactions\n4. p2sh                 (boolean, optional, default=false) Add the P2SH version of the script as well\n')),(0,r.kt)("h2",{id:"output"},"Output"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Result"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"..."),(0,r.kt)("td",{parentName:"tr",align:null},"..."),(0,r.kt)("td",{parentName:"tr",align:null},"...")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Result:\n{\n  ...\n}\n")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "importaddress", "params": ["myscript", "testing", false] }\' -H \'content-type: text/plain;\' http://127.0.0.1:9998/\n')))}u.isMDXComponent=!0},7961:(t,e,a)=>{a.d(e,{Z:()=>l});const l=a.p+"assets/medias/importaddress-30bb95e3a0f8eee7a591ff8fd38d3e57.webm"}}]);